{"version":3,"file":"static/webpack/static/development/pages/_app.js.effb58c79ea64bb33336.hot-update.js","sources":["webpack:///./src/reducers/files.ts"],"sourcesContent":["import {\n    FilesActions,\n    FilesState,\n    FileStatus,\n    ADD_FILES,\n    REMOVE_FILE,\n    UPDATE_STATUS,\n    UPDATE_LOG,\n    INIT_WORKER,\n    CREATE_FILE,\n    CREATE_MULTIPART_FILE,\n    CONVERT_FILE,\n    DOWNLOAD_FILE,\n} from 'store/types';\n\nconst initialState: FilesState = {\n    files: [],\n};\n\nfunction applyFileUpdate(\n    targetId: string,\n    key: WritableKeys<File>,\n    value: any,\n    update?: (file: File) => any,\n) {\n    return (file: File) => {\n        if (file.id !== targetId) {\n            return file;\n        }\n\n        // Ensure custom non-readonly file properties are carried over\n        const fileKeys: Array<WritableKeys<File>> = Object.keys(file) as any;\n        const fileToUpdate = new File([file], file.name);\n        fileKeys.forEach(key => {\n            fileToUpdate[key] = file[key];\n        });\n\n        // Update file properties\n        fileToUpdate[key] = update ? update(file) : value;\n\n        return fileToUpdate;\n    };\n}\n\nfunction unionFiles(uniqueFiles: Array<File>, file: File) {\n    return !uniqueFiles.some(f => f.id === file.id)\n        ? [...uniqueFiles, file]\n        : uniqueFiles;\n}\n\nexport default function filesReducer(\n    state: FilesState = initialState,\n    action: FilesActions,\n): FilesState {\n    switch (action.type) {\n        case ADD_FILES: {\n            const addedFiles = [...state.files, ...action.files];\n\n            return {\n                ...state,\n                files: addedFiles.reduce(unionFiles, [] as Array<File>),\n            };\n        }\n\n        case REMOVE_FILE: {\n            return {\n                ...state,\n                files: state.files.filter(file => file.id !== action.file.id),\n            };\n        }\n\n        case UPDATE_STATUS:\n            return {\n                ...state,\n                files: state.files.map(\n                    applyFileUpdate(action.id, 'status', action.status),\n                ),\n            };\n\n        case UPDATE_LOG:\n            const update = (file: File) =>\n                action.overwrite\n                    ? [\n                          ...file.log.slice(0, file.log.length - 1),\n                          action.message,\n                      ]\n                    : [...file.log, action.message];\n            return {\n                ...state,\n                files: state.files.map(\n                    applyFileUpdate(action.id, 'log', action.message, update),\n                ),\n            };\n\n        case INIT_WORKER: {\n            return {\n                ...state,\n                files: state.files.map(\n                    applyFileUpdate(\n                        action.id,\n                        'status',\n                        FileStatus.Initializing,\n                    ),\n                ),\n            };\n        }\n\n        case CREATE_FILE:\n        case CREATE_MULTIPART_FILE:\n            return {\n                ...state,\n                files: state.files.map(\n                    applyFileUpdate(action.id, 'status', FileStatus.Preparing),\n                ),\n            };\n\n        case CONVERT_FILE:\n            return {\n                ...state,\n                files: state.files.map(\n                    applyFileUpdate(action.id, 'status', FileStatus.Converting),\n                ),\n            };\n\n        case DOWNLOAD_FILE:\n            return {\n                ...state,\n                files: state.files.map(\n                    applyFileUpdate(\n                        action.id,\n                        'status',\n                        FileStatus.Downloading,\n                    ),\n                ),\n            };\n\n        default:\n            return state;\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAeA;AACA;AADA;AACA;AAGA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AAMA;AAEA;AAFA;AACA;AAMA;AAAA;AACA;AAEA;AAFA;AAUA;AACA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAMA;AACA;AAEA;AAFA;AACA;AAMA;AACA;AAEA;AAFA;AACA;AAUA;AACA;AAnFA;AAqFA;;;;A","sourceRoot":""}