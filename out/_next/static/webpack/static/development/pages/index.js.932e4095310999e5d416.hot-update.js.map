{"version":3,"file":"static/webpack/static/development/pages/index.js.932e4095310999e5d416.hot-update.js","sources":["webpack:///./src/components/file.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Icon, { Size, Props as IconProps } from 'components/icon';\nimport { abbreviateFileSize } from 'lib/bytes';\nimport { removeFile } from 'actions/files';\nimport { FileStatus } from 'store/types';\nimport color from 'styles/color';\nimport { Store } from 'store/types';\n\ntype Props = {\n    file: File;\n    showLogs: Function;\n};\n\nenum StatusType {\n    Info,\n    Success,\n    Warning,\n    Error,\n}\n\nconst statusTypes = {\n    [StatusType.Info]: [\n        FileStatus.Waiting,\n        FileStatus.Initializing,\n        FileStatus.Ready,\n        FileStatus.Preparing,\n        FileStatus.Pending,\n        FileStatus.Converting,\n        FileStatus.Downloading,\n    ],\n    [StatusType.Success]: [FileStatus.Completed],\n    [StatusType.Warning]: [\n        /*TODO*/\n    ],\n    [StatusType.Error]: [\n        /*TODO*/\n    ],\n};\n\ntype TrashButtonProps = {\n    onClick: (event: React.MouseEvent<HTMLElement>) => void;\n};\n\nconst TrashButton = React.memo((props: TrashButtonProps) => (\n    <div className=\"button\">\n        <Icon\n            name=\"trash\"\n            size={Size.Small}\n            color={color.chetwodeBlue}\n            onClick={props.onClick}\n        />\n        <style jsx>{`\n            .button:hover {\n                opacity: 0.5;\n            }\n        `}</style>\n    </div>\n));\n\nconst File: React.FunctionComponent<Props> = props => {\n    const dispatch = useDispatch();\n    const storeFile = useSelector((state: Store) =>\n        state.files.files.find(file => file.id === props.file.id),\n    );\n\n    const fileStatus = FileStatus[props.file.status];\n    const [statusType]: Array<any> =\n        Object.entries(statusTypes).find(([type, statuses]) =>\n            statuses.includes(props.file.status),\n        ) || [];\n\n    const statusProps: IconProps = {\n        name: 'subdirectory-right',\n        color: color.chetwodeBlue,\n        size: Size.ExtraSmall,\n    };\n    switch (+statusType) {\n        case StatusType.Success:\n            statusProps.name = 'check-circle';\n            statusProps.color = color.deYorkGreen;\n            break;\n        case StatusType.Warning:\n            statusProps.name = 'error';\n            statusProps.color = color.oldGold;\n            break;\n        case StatusType.Error:\n            statusProps.solid = true;\n            statusProps.name = 'error-circle';\n            statusProps.color = color.salmon;\n            break;\n    }\n\n    let animation = undefined;\n    switch (props.file.status) {\n        case FileStatus.Initializing:\n        case FileStatus.Preparing:\n        case FileStatus.Pending:\n        case FileStatus.Converting:\n        case FileStatus.Downloading:\n            animation = 'flashing';\n            break;\n    }\n\n    const removeFile = useCallback(\n        () => dispatch(removeFile(props.file.id)),\n        [dispatch]\n    );\n\n    return (\n        <div className=\"file\">\n            <div className=\"file-section\">\n                <div className=\"file-info\">\n                    <div className=\"file-icon\">\n                        <Icon\n                            solid\n                            name=\"file\"\n                            size={Size.Medium}\n                            color={color.waikawaGray}\n                            animation={animation}\n                        />\n                    </div>\n                    <div className=\"details\">\n                        <div className=\"filename\">{props.file.name}</div>\n                        <div className=\"filesize\">\n                            {abbreviateFileSize(props.file.size)}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"status-message\">\n                    <Icon {...statusProps} />\n                    <div className=\"message\">\n                        <b>{fileStatus}</b>:{' '}\n                        {props.file.log[props.file.log.length - 1]}\n                    </div>\n                </div>\n            </div>\n            <div className=\"control-section\">\n                <div className=\"button\">\n                    <Icon\n                        solid\n                        name=\"terminal\"\n                        size={Size.Small}\n                        color={color.chetwodeBlue}\n                        onClick={() =>\n                            props.showLogs(storeFile ? storeFile.id : null)\n                        }\n                    />\n                </div>\n                <TrashButton onClick={removeFile} />\n            </div>\n            <style jsx>{`\n                .file {\n                    display: flex;\n                    align-items: center;\n                    padding: 10px;\n                    cursor: default;\n                    margin-bottom: 10px;\n                    border-radius: 5px;\n                    box-sizing: border-box;\n                    background-color: ${color.lilacWhite};\n                }\n                .file:last-of-type {\n                    margin-bottom: 20px;\n                }\n                .file:hover {\n                    background-color: ${color.catskillWhite};\n                }\n                .file-section {\n                    flex: 7;\n                    display: flex;\n                    flex-direction: column;\n                }\n                .file-info {\n                    display: flex;\n                    align-items: center;\n                    margin-bottom: 5px;\n                }\n                .file-icon {\n                    flex: 1;\n                }\n                .details {\n                    flex: 14;\n                    display: flex;\n                    flex-direction: column;\n                }\n                .filename {\n                    overflow: hidden;\n                    display: -webkit-box;\n                    -webkit-line-clamp: 2;\n                    -webkit-box-orient: vertical;\n                    color: ${color.mineShaft};\n                }\n                .filesize {\n                    color: darkgray;\n                    font-size: 13px;\n                }\n                .control-section {\n                    flex: 1;\n                    display: flex;\n                    justify-content: space-around;\n                }\n                .button:hover {\n                    opacity: 0.5;\n                }\n                .status-message {\n                    display: flex;\n                    align-items: flex-end;\n                    font-size: 12px;\n                    color: ${statusProps.color};\n                    max-width: 630px;\n                }\n                .message {\n                    padding-left: 5px;\n                    white-space: nowrap;\n                    overflow: hidden;\n                    text-overflow: ellipsis;\n                }\n            `}</style>\n        </div>\n    );\n};\n\nexport default File;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAQA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AAYA;AADA;AAIA;AADA;AASA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AADA;AACA;AAeA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAIA;AACA;AAPA;AAQA;AAAA;AAAA;AACA;AADA;AAAA;AARA;AAAA;AACA;AAWA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAbA;AACA;AAeA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AACA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvCA;AAAA;AAAA;AAAA;AA+GA;AACA;AACA;;;;A","sourceRoot":""}