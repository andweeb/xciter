{"version":3,"file":"static/webpack/static/development/pages/index.js.03f9449c23418dabd2e7.hot-update.js","sources":["webpack:///./src/store/types.ts"],"sourcesContent":["export enum FileStatus {\n    Waiting,\n    Initializing,\n    Ready,\n    Preparing,\n    Pending,\n    Converting,\n    Downloading,\n    Completed,\n    Warning,\n    Error,\n}\n\n// Keyset actions\nexport const ADD_KEYSET = 'ADD_KEYSET';\n// Files actions\nexport const ADD_FILES = 'ADD_FILES';\nexport const REMOVE_FILE = 'REMOVE_FILE';\nexport const INIT_WORKER = 'INIT_WORKER';\nexport const CREATE_FILE = 'CREATE_FILE';\nexport const CREATE_MULTIPART_FILE = 'CREATE_MULTIPART_FILE';\nexport const UPDATE_STATUS = 'UPDATE_STATUS';\nexport const UPDATE_LOG = 'UPDATE_LOG';\nexport const CONVERT_FILE = 'CONVERT_FILE';\nexport const DOWNLOAD_FILE = 'DOWNLOAD_FILE';\nexport const FINISH_FILE = 'FINISH_FILE';\n\n// Keyset state\nexport interface KeysetState {\n    file: File | null;\n}\nexport interface AddKeysetAction {\n    type: typeof ADD_KEYSET;\n    file: File;\n}\nexport type KeysetActions = AddKeysetAction;\n\n// Files state\nexport interface FilesState {\n    files: Array<File>;\n}\nexport interface AddFilesAction {\n    type: typeof ADD_FILES;\n    files: Array<File>;\n}\nexport interface RemoveFileAction {\n    type: typeof REMOVE_FILE;\n    file: File;\n}\nexport interface UpdateStatusAction {\n    type: typeof UPDATE_STATUS;\n    id: string;\n    status: FileStatus;\n}\nexport interface UpdateLogAction {\n    type: typeof UPDATE_LOG;\n    id: string;\n    message: string;\n    overwrite?: boolean;\n    status?: FileStatus;\n}\nexport interface InitWorkerAction {\n    type: typeof INIT_WORKER;\n    id: string;\n}\nexport interface CreateFileAction {\n    type: typeof CREATE_FILE;\n    id: string;\n    file: File;\n}\nexport interface CreateMultiPartFileAction {\n    type: typeof CREATE_MULTIPART_FILE;\n    id: string;\n    file: File;\n}\nexport interface ConvertFileAction {\n    type: typeof CONVERT_FILE;\n    id: string;\n}\nexport interface DownloadFileAction {\n    type: typeof DOWNLOAD_FILE;\n    id: string;\n    nspName: string;\n}\nexport interface FinishFileAction {\n    type: typeof FINISH_FILE;\n    id: string;\n}\nexport type FilesActions =\n    | AddFilesAction\n    | RemoveFileAction\n    | InitWorkerAction\n    | CreateFileAction\n    | CreateMultiPartFileAction\n    | UpdateStatusAction\n    | UpdateLogAction\n    | ConvertFileAction\n    | DownloadFileAction;\n\n// Store\nexport type Store = {\n    keyset: KeysetState;\n    files: FilesState;\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}